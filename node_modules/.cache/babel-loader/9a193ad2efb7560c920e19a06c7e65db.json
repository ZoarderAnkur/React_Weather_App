{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ankur\\\\Documents\\\\note\\\\a\\\\weather-app-react\\\\src\\\\components\\\\Result.js\";\nimport React from 'react';\nimport './Result.sass';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCloud, faBolt, faCloudRain, faCloudShowersHeavy, faSnowflake, faSun, faSmog } from '@fortawesome/free-solid-svg-icons';\nimport styled from 'styled-components';\nimport device from '../responsive/Device';\nimport ForecastHour from './ForecastHour';\nimport ResultFadeIn from './ResultFadeIn';\nimport BigLabel from './BigLabel';\nimport MediumLabel from './MediumLabel';\nimport SmallLabel from './SmallLabel';\nimport Text from './Text'; // const Results = styled.div`\n//   display: flex;\n//   flex-wrap: wrap;\n//   justify-content: space-between;\n//   padding: 40px 0;\n//   opacity: 0;\n//   visibility: hidden;\n//   position: relative;\n//   top: 20px;\n//   animation: ${ResultFadeIn} 0.5s 1.4s forwards;\n// `;\n\nconst LocationWrapper = styled.div`\n  flex-basis: 100%;\n`;\nconst CurrentWeatherWrapper = styled.div`\n  flex-basis: 100%;\n  display: grid;\n  justify-content: center;\n  align-items: center;\n  grid-template-columns: auto 1fr;\n  margin: 20px 0;\n  grid-gap: 30px;\n  @media ${device.mobileL} {\n    flex-basis: 50%;\n    padding-right: 10px;\n  }\n  @media ${device.tablet} {\n    grid-template-columns: 1fr 1fr;\n    padding-right: 20px;\n  }\n`;\nconst WeatherIcon = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 70px;\n  color: #ffffff;\n  @media ${device.tablet} {\n    font-size: 100px;\n    justify-content: flex-end;\n  }\n  @media ${device.laptop} {\n    font-size: 120px;\n  }\n  @media ${device.laptopL} {\n    font-size: 140px;\n  }\n`;\nconst TemperatureWrapper = styled.div``;\nconst Temperature = styled.h3`\n  display: block;\n  font-size: 50px;\n  font-weight: 400;\n  color: #ffffff;\n  @media ${device.tablet} {\n    font-size: 70px;\n  }\n  @media ${device.laptop} {\n    font-size: 90px;\n  }\n  @media ${device.laptopL} {\n    font-size: 110px;\n  }\n`;\nconst WeatherDetailsWrapper = styled.div`\n  flex-basis: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  padding: 10px 0;\n  margin: 20px 0;\n  background-color: rgba(255, 255, 255, 0.2);\n  border-radius: 10px;\n  align-self: flex-start;\n  @media ${device.mobileL} {\n    flex-basis: 50%;\n  }\n`;\nconst WeatherDetail = styled.div`\n  flex-basis: calc(100% / 3);\n  padding: 10px;\n  @media ${device.laptop} {\n    padding: 20px 10px;\n  }\n`;\nconst ForecastWrapper = styled.div`\n  flex-basis: 100%;\n  margin: 20px 0;\n  overflow: hidden;\n`;\nconst Forecast = styled.div`\n  position: relative;\n  display: flex;\n  overflow-x: scroll;\n  overflow-y: hidden;\n  scrollbar-color: lightgray #ffffff;\n  scrollbar-width: thin;\n  margin-top: 20px;\n  padding-bottom: 20px;\n  @media ${device.laptop} {\n    order: 4;\n  }\n`;\n\nconst Result = ({\n  weather\n}) => {\n  const city = weather.city,\n        country = weather.country,\n        date = weather.date,\n        description = weather.description,\n        main = weather.main,\n        temp = weather.temp,\n        sunset = weather.sunset,\n        sunrise = weather.sunrise,\n        humidity = weather.humidity,\n        wind = weather.wind,\n        highestTemp = weather.highestTemp,\n        lowestTemp = weather.lowestTemp,\n        forecast = weather.forecast;\n  const forecasts = forecast.map(item => React.createElement(ForecastHour, {\n    key: item.dt,\n    temp: Math.floor(item.main.temp * 1) / 1,\n    icon: item.weather[0].icon,\n    month: item.dt_txt.slice(5, 7),\n    day: item.dt_txt.slice(8, 10),\n    hour: item.dt_txt.slice(11, 13) * 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }));\n  let weatherIcon = null;\n\n  if (main === 'Thunderstorm') {\n    weatherIcon = React.createElement(FontAwesomeIcon, {\n      icon: faBolt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    });\n  } else if (main === 'Drizzle') {\n    weatherIcon = React.createElement(FontAwesomeIcon, {\n      icon: faCloudRain,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    });\n  } else if (main === 'Rain') {\n    weatherIcon = React.createElement(FontAwesomeIcon, {\n      icon: faCloudShowersHeavy,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    });\n  } else if (main === 'Snow') {\n    weatherIcon = React.createElement(FontAwesomeIcon, {\n      icon: faSnowflake,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    });\n  } else if (main === 'Clear') {\n    weatherIcon = React.createElement(FontAwesomeIcon, {\n      icon: faSun,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    });\n  } else if (main === 'Clouds') {\n    weatherIcon = React.createElement(FontAwesomeIcon, {\n      icon: faCloud,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    });\n  } else {\n    weatherIcon = React.createElement(FontAwesomeIcon, {\n      icon: faSmog,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"Results\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, React.createElement(LocationWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, React.createElement(BigLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, city, \", \", country), React.createElement(SmallLabel, {\n    weight: \"400\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, date)), React.createElement(CurrentWeatherWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, React.createElement(WeatherIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, weatherIcon), React.createElement(TemperatureWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, React.createElement(Temperature, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, Math.floor(temp), \"\\xB0\"), React.createElement(SmallLabel, {\n    weight: \"400\",\n    firstToUpperCase: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, description))), React.createElement(WeatherDetailsWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, React.createElement(WeatherDetail, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, React.createElement(SmallLabel, {\n    align: \"center\",\n    weight: \"400\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, Math.floor(highestTemp), \"\\xB0\"), React.createElement(Text, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, \"Hight\")), React.createElement(WeatherDetail, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, React.createElement(SmallLabel, {\n    align: \"center\",\n    weight: \"400\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, wind, \"mph\"), React.createElement(Text, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, \"Wind\")), React.createElement(WeatherDetail, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, React.createElement(SmallLabel, {\n    align: \"center\",\n    weight: \"400\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, sunrise), React.createElement(Text, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, \"Sunrise\")), React.createElement(WeatherDetail, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, React.createElement(SmallLabel, {\n    align: \"center\",\n    weight: \"400\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, Math.floor(lowestTemp), \"\\xB0\"), React.createElement(Text, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, \"Low\")), React.createElement(WeatherDetail, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, React.createElement(SmallLabel, {\n    align: \"center\",\n    weight: \"400\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, humidity, \"%\"), React.createElement(Text, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, \"Rain\")), React.createElement(WeatherDetail, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }, React.createElement(SmallLabel, {\n    align: \"center\",\n    weight: \"400\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, sunset), React.createElement(Text, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }, \"Sunset\"))), React.createElement(ForecastWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, React.createElement(MediumLabel, {\n    weight: \"400\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, \"Forecast\"), React.createElement(Forecast, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }, forecasts)));\n};\n\nResult.propTypes = {\n  weather: PropTypes.shape({\n    city: PropTypes.string,\n    country: PropTypes.string,\n    date: PropTypes.string,\n    description: PropTypes.string,\n    main: PropTypes.string,\n    temp: PropTypes.number,\n    sunrise: PropTypes.string,\n    sunset: PropTypes.string,\n    humidity: PropTypes.number,\n    wind: PropTypes.number,\n    highestTemp: PropTypes.number,\n    lowestTemp: PropTypes.number,\n    forecast: PropTypes.array\n  }).isRequired\n};\nexport default Result;","map":{"version":3,"sources":["C:/Users/Ankur/Documents/note/a/weather-app-react/src/components/Result.js"],"names":["React","PropTypes","FontAwesomeIcon","faCloud","faBolt","faCloudRain","faCloudShowersHeavy","faSnowflake","faSun","faSmog","styled","device","ForecastHour","ResultFadeIn","BigLabel","MediumLabel","SmallLabel","Text","LocationWrapper","div","CurrentWeatherWrapper","mobileL","tablet","WeatherIcon","laptop","laptopL","TemperatureWrapper","Temperature","h3","WeatherDetailsWrapper","WeatherDetail","ForecastWrapper","Forecast","Result","weather","city","country","date","description","main","temp","sunset","sunrise","humidity","wind","highestTemp","lowestTemp","forecast","forecasts","map","item","dt","Math","floor","icon","dt_txt","slice","weatherIcon","propTypes","shape","string","number","array","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './Result.sass';\r\nimport PropTypes from 'prop-types';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faCloud,\r\n  faBolt,\r\n  faCloudRain,\r\n  faCloudShowersHeavy,\r\n  faSnowflake,\r\n  faSun,\r\n  faSmog,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport styled from 'styled-components';\r\nimport device from '../responsive/Device';\r\nimport ForecastHour from './ForecastHour';\r\nimport ResultFadeIn from './ResultFadeIn';\r\nimport BigLabel from './BigLabel';\r\nimport MediumLabel from './MediumLabel';\r\nimport SmallLabel from './SmallLabel';\r\nimport Text from './Text';\r\n\r\n// const Results = styled.div`\r\n//   display: flex;\r\n//   flex-wrap: wrap;\r\n//   justify-content: space-between;\r\n//   padding: 40px 0;\r\n//   opacity: 0;\r\n//   visibility: hidden;\r\n//   position: relative;\r\n//   top: 20px;\r\n//   animation: ${ResultFadeIn} 0.5s 1.4s forwards;\r\n// `;\r\n\r\nconst LocationWrapper = styled.div`\r\n  flex-basis: 100%;\r\n`;\r\n\r\nconst CurrentWeatherWrapper = styled.div`\r\n  flex-basis: 100%;\r\n  display: grid;\r\n  justify-content: center;\r\n  align-items: center;\r\n  grid-template-columns: auto 1fr;\r\n  margin: 20px 0;\r\n  grid-gap: 30px;\r\n  @media ${device.mobileL} {\r\n    flex-basis: 50%;\r\n    padding-right: 10px;\r\n  }\r\n  @media ${device.tablet} {\r\n    grid-template-columns: 1fr 1fr;\r\n    padding-right: 20px;\r\n  }\r\n`;\r\n\r\nconst WeatherIcon = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 70px;\r\n  color: #ffffff;\r\n  @media ${device.tablet} {\r\n    font-size: 100px;\r\n    justify-content: flex-end;\r\n  }\r\n  @media ${device.laptop} {\r\n    font-size: 120px;\r\n  }\r\n  @media ${device.laptopL} {\r\n    font-size: 140px;\r\n  }\r\n`;\r\n\r\nconst TemperatureWrapper = styled.div``;\r\n\r\nconst Temperature = styled.h3`\r\n  display: block;\r\n  font-size: 50px;\r\n  font-weight: 400;\r\n  color: #ffffff;\r\n  @media ${device.tablet} {\r\n    font-size: 70px;\r\n  }\r\n  @media ${device.laptop} {\r\n    font-size: 90px;\r\n  }\r\n  @media ${device.laptopL} {\r\n    font-size: 110px;\r\n  }\r\n`;\r\n\r\nconst WeatherDetailsWrapper = styled.div`\r\n  flex-basis: 100%;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  padding: 10px 0;\r\n  margin: 20px 0;\r\n  background-color: rgba(255, 255, 255, 0.2);\r\n  border-radius: 10px;\r\n  align-self: flex-start;\r\n  @media ${device.mobileL} {\r\n    flex-basis: 50%;\r\n  }\r\n`;\r\n\r\nconst WeatherDetail = styled.div`\r\n  flex-basis: calc(100% / 3);\r\n  padding: 10px;\r\n  @media ${device.laptop} {\r\n    padding: 20px 10px;\r\n  }\r\n`;\r\n\r\nconst ForecastWrapper = styled.div`\r\n  flex-basis: 100%;\r\n  margin: 20px 0;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Forecast = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  overflow-x: scroll;\r\n  overflow-y: hidden;\r\n  scrollbar-color: lightgray #ffffff;\r\n  scrollbar-width: thin;\r\n  margin-top: 20px;\r\n  padding-bottom: 20px;\r\n  @media ${device.laptop} {\r\n    order: 4;\r\n  }\r\n`;\r\n\r\nconst Result = ({ weather }) => {\r\n  const {\r\n    city,\r\n    country,\r\n    date,\r\n    description,\r\n    main,\r\n    temp,\r\n    sunset,\r\n    sunrise,\r\n    humidity,\r\n    wind,\r\n    highestTemp,\r\n    lowestTemp,\r\n    forecast,\r\n  } = weather;\r\n\r\n  const forecasts = forecast.map(item => (\r\n    <ForecastHour\r\n      key={item.dt}\r\n      temp={Math.floor(item.main.temp * 1) / 1}\r\n      icon={item.weather[0].icon}\r\n      month={item.dt_txt.slice(5, 7)}\r\n      day={item.dt_txt.slice(8, 10)}\r\n      hour={item.dt_txt.slice(11, 13) * 1}\r\n    />\r\n  ));\r\n\r\n  let weatherIcon = null;\r\n\r\n  if (main === 'Thunderstorm') {\r\n    weatherIcon = <FontAwesomeIcon icon={faBolt} />;\r\n  } else if (main === 'Drizzle') {\r\n    weatherIcon = <FontAwesomeIcon icon={faCloudRain} />;\r\n  } else if (main === 'Rain') {\r\n    weatherIcon = <FontAwesomeIcon icon={faCloudShowersHeavy} />;\r\n  } else if (main === 'Snow') {\r\n    weatherIcon = <FontAwesomeIcon icon={faSnowflake} />;\r\n  } else if (main === 'Clear') {\r\n    weatherIcon = <FontAwesomeIcon icon={faSun} />;\r\n  } else if (main === 'Clouds') {\r\n    weatherIcon = <FontAwesomeIcon icon={faCloud} />;\r\n  } else {\r\n    weatherIcon = <FontAwesomeIcon icon={faSmog} />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"Results\">\r\n      <LocationWrapper>\r\n        <BigLabel>\r\n          {city}, {country}\r\n        </BigLabel>\r\n        <SmallLabel weight=\"400\">{date}</SmallLabel>\r\n      </LocationWrapper>\r\n      <CurrentWeatherWrapper>\r\n        <WeatherIcon>{weatherIcon}</WeatherIcon>\r\n        <TemperatureWrapper>\r\n          <Temperature>{Math.floor(temp)}&#176;</Temperature>\r\n          <SmallLabel weight=\"400\" firstToUpperCase>\r\n            {description}\r\n          </SmallLabel>\r\n        </TemperatureWrapper>\r\n      </CurrentWeatherWrapper>\r\n      <WeatherDetailsWrapper>\r\n        <WeatherDetail>\r\n          <SmallLabel align=\"center\" weight=\"400\">\r\n            {Math.floor(highestTemp)}&#176;\r\n          </SmallLabel>\r\n          <Text align=\"center\">Hight</Text>\r\n        </WeatherDetail>\r\n        <WeatherDetail>\r\n          <SmallLabel align=\"center\" weight=\"400\">\r\n            {wind}mph\r\n          </SmallLabel>\r\n          <Text align=\"center\">Wind</Text>\r\n        </WeatherDetail>\r\n        <WeatherDetail>\r\n          <SmallLabel align=\"center\" weight=\"400\">\r\n            {sunrise}\r\n          </SmallLabel>\r\n          <Text align=\"center\">Sunrise</Text>\r\n        </WeatherDetail>\r\n        <WeatherDetail>\r\n          <SmallLabel align=\"center\" weight=\"400\">\r\n            {Math.floor(lowestTemp)}&#176;\r\n          </SmallLabel>\r\n          <Text align=\"center\">Low</Text>\r\n        </WeatherDetail>\r\n        <WeatherDetail>\r\n          <SmallLabel align=\"center\" weight=\"400\">\r\n            {humidity}%\r\n          </SmallLabel>\r\n          <Text align=\"center\">Rain</Text>\r\n        </WeatherDetail>\r\n        <WeatherDetail>\r\n          <SmallLabel align=\"center\" weight=\"400\">\r\n            {sunset}\r\n          </SmallLabel>\r\n          <Text align=\"center\">Sunset</Text>\r\n        </WeatherDetail>\r\n      </WeatherDetailsWrapper>\r\n      <ForecastWrapper>\r\n        <MediumLabel weight=\"400\">Forecast</MediumLabel>\r\n        <Forecast>{forecasts}</Forecast>\r\n      </ForecastWrapper>\r\n    </div>\r\n  );\r\n};\r\n\r\nResult.propTypes = {\r\n  weather: PropTypes.shape({\r\n    city: PropTypes.string,\r\n    country: PropTypes.string,\r\n    date: PropTypes.string,\r\n    description: PropTypes.string,\r\n    main: PropTypes.string,\r\n    temp: PropTypes.number,\r\n    sunrise: PropTypes.string,\r\n    sunset: PropTypes.string,\r\n    humidity: PropTypes.number,\r\n    wind: PropTypes.number,\r\n    highestTemp: PropTypes.number,\r\n    lowestTemp: PropTypes.number,\r\n    forecast: PropTypes.array,\r\n  }).isRequired,\r\n};\r\n\r\nexport default Result;\r\n"]},"metadata":{},"sourceType":"module"}