{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ankur\\\\Documents\\\\note\\\\a\\\\weather-app-react\\\\src\\\\components\\\\App.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport SearchCity from './SearchCity';\nimport device from '../responsive/Device';\nimport Result from './Result';\nimport NotFound from './NotFound';\nimport './style.css'; // const AppTitle = styled.h1`\n//   display: block;\n//   height: 64px;\n//   margin: 0;\n//   padding: 20px 0;\n//   font-size: 20px;\n//   text-transform: uppercase;\n//   font-weight: 400;\n//   color: #ffffff;\n//   transition: 0.3s 1.4s;\n//   opacity: ${({ showLabel }) => (showLabel ? 1 : 0)};\n//   ${({ secondary }) =>\n//     secondary &&\n//     `\n//     opacity: 1;\n//     height: auto;\n//     position: relative;\n//     padding: 20px 0;\n//     font-size: 30px;\n//     top: 20%;\n//     text-align: center;\n//     transition: .5s;\n//     @media ${device.tablet} {\n//       font-size: 40px;\n//     }\n//     @media ${device.laptop} {\n//       font-size: 50px;\n//     }\n//     @media ${device.laptopL} {\n//       font-size: 60px;\n//     }\n//     @media ${device.desktop} {\n//       font-size: 70px;\n//     }\n//   `}\n//   ${({ showResult }) =>\n//     showResult &&\n//     `\n//     opacity: 0;\n//     visibility: hidden;\n//     top: 10%;\n//   `}\n// `;\n// const WeatherWrapper = styled.div`\n//   max-width: 1500px;\n//   margin: 0 auto;\n//   height: calc(100vh - 64px);\n//   width: 100%;\n//   position: relative;\n// `;\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: '',\n      weatherInfo: null,\n      error: false\n    };\n\n    this.handleInputChange = e => {\n      this.setState({\n        value: e.target.value\n      });\n    };\n\n    this.handleSearchCity = e => {\n      e.preventDefault();\n      const value = this.state.value;\n      const APIkey = '60f7276df8da3225f5f55f42958405ff';\n      const weather = `https://api.openweathermap.org/data/2.5/weather?q=${value}&APPID=${APIkey}&units=metric`;\n      const forecast = `https://api.openweathermap.org/data/2.5/forecast?q=${value}&APPID=${APIkey}&units=metric`;\n      Promise.all([fetch(weather), fetch(forecast)]).then(([res1, res2]) => {\n        if (res1.ok && res2.ok) {\n          return Promise.all([res1.json(), res2.json()]);\n        }\n\n        throw Error(res1.statusText, res2.statusText);\n      }).then(([data1, data2]) => {\n        const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'Nocvember', 'December'];\n        const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n        const currentDate = new Date();\n        const date = `${days[currentDate.getDay()]} ${currentDate.getDate()} ${months[currentDate.getMonth()]}`;\n        const sunset = new Date(data1.sys.sunset * 1000).toLocaleTimeString().slice(0, 5);\n        const sunrise = new Date(data1.sys.sunrise * 1000).toLocaleTimeString().slice(0, 5);\n        const weatherInfo = {\n          city: data1.name,\n          country: data1.sys.country,\n          date,\n          description: data1.weather[0].description,\n          main: data1.weather[0].main,\n          temp: data1.main.temp,\n          highestTemp: data1.main.temp_max,\n          lowestTemp: data1.main.temp_min,\n          sunrise,\n          sunset,\n          clouds: data1.clouds.all,\n          humidity: data1.main.humidity,\n          wind: data1.wind.speed,\n          forecast: data2.list\n        };\n        this.setState({\n          weatherInfo,\n          error: false\n        });\n      }).catch(error => {\n        console.log(error);\n        this.setState({\n          error: true,\n          weatherInfo: null\n        });\n      });\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          value = _this$state.value,\n          weatherInfo = _this$state.weatherInfo,\n          error = _this$state.error;\n    return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Weather app\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(SearchCity, {\n      value: value,\n      showResult: (weatherInfo || error) && true,\n      change: this.handleInputChange,\n      submit: this.handleSearchCity,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), weatherInfo && React.createElement(Result, {\n      weather: weatherInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), error && React.createElement(NotFound, {\n      error: error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Ankur/Documents/note/a/weather-app-react/src/components/App.js"],"names":["React","styled","SearchCity","device","Result","NotFound","App","Component","state","value","weatherInfo","error","handleInputChange","e","setState","target","handleSearchCity","preventDefault","APIkey","weather","forecast","Promise","all","fetch","then","res1","res2","ok","json","Error","statusText","data1","data2","months","days","currentDate","Date","date","getDay","getDate","getMonth","sunset","sys","toLocaleTimeString","slice","sunrise","city","name","country","description","main","temp","highestTemp","temp_max","lowestTemp","temp_min","clouds","humidity","wind","speed","list","catch","console","log","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport SearchCity from './SearchCity';\r\nimport device from '../responsive/Device';\r\nimport Result from './Result';\r\nimport NotFound from './NotFound';\r\nimport './style.css';\r\n\r\n// const AppTitle = styled.h1`\r\n//   display: block;\r\n//   height: 64px;\r\n//   margin: 0;\r\n//   padding: 20px 0;\r\n//   font-size: 20px;\r\n//   text-transform: uppercase;\r\n//   font-weight: 400;\r\n//   color: #ffffff;\r\n//   transition: 0.3s 1.4s;\r\n//   opacity: ${({ showLabel }) => (showLabel ? 1 : 0)};\r\n\r\n//   ${({ secondary }) =>\r\n//     secondary &&\r\n//     `\r\n//     opacity: 1;\r\n//     height: auto;\r\n//     position: relative;\r\n//     padding: 20px 0;\r\n//     font-size: 30px;\r\n//     top: 20%;\r\n//     text-align: center;\r\n//     transition: .5s;\r\n//     @media ${device.tablet} {\r\n//       font-size: 40px;\r\n//     }\r\n//     @media ${device.laptop} {\r\n//       font-size: 50px;\r\n//     }\r\n//     @media ${device.laptopL} {\r\n//       font-size: 60px;\r\n//     }\r\n//     @media ${device.desktop} {\r\n//       font-size: 70px;\r\n//     }\r\n    \r\n//   `}\r\n\r\n//   ${({ showResult }) =>\r\n//     showResult &&\r\n//     `\r\n//     opacity: 0;\r\n//     visibility: hidden;\r\n//     top: 10%;\r\n//   `}\r\n// `;\r\n\r\n// const WeatherWrapper = styled.div`\r\n//   max-width: 1500px;\r\n//   margin: 0 auto;\r\n//   height: calc(100vh - 64px);\r\n//   width: 100%;\r\n//   position: relative;\r\n// `;\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    value: '',\r\n    weatherInfo: null,\r\n    error: false,\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({\r\n      value: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSearchCity = e => {\r\n    e.preventDefault();\r\n    const { value } = this.state;\r\n    const APIkey = '60f7276df8da3225f5f55f42958405ff';\r\n\r\n    const weather = `https://api.openweathermap.org/data/2.5/weather?q=${value}&APPID=${APIkey}&units=metric`;\r\n    const forecast = `https://api.openweathermap.org/data/2.5/forecast?q=${value}&APPID=${APIkey}&units=metric`;\r\n\r\n    Promise.all([fetch(weather), fetch(forecast)])\r\n      .then(([res1, res2]) => {\r\n        if (res1.ok && res2.ok) {\r\n          return Promise.all([res1.json(), res2.json()]);\r\n        }\r\n        throw Error(res1.statusText, res2.statusText);\r\n      })\r\n      .then(([data1, data2]) => {\r\n        const months = [\r\n          'January',\r\n          'February',\r\n          'March',\r\n          'April',\r\n          'May',\r\n          'June',\r\n          'July',\r\n          'August',\r\n          'September',\r\n          'October',\r\n          'Nocvember',\r\n          'December',\r\n        ];\r\n        const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n        const currentDate = new Date();\r\n        const date = `${days[currentDate.getDay()]} ${currentDate.getDate()} ${\r\n          months[currentDate.getMonth()]\r\n        }`;\r\n        const sunset = new Date(data1.sys.sunset * 1000).toLocaleTimeString().slice(0, 5);\r\n        const sunrise = new Date(data1.sys.sunrise * 1000).toLocaleTimeString().slice(0, 5);\r\n\r\n        const weatherInfo = {\r\n          city: data1.name,\r\n          country: data1.sys.country,\r\n          date,\r\n          description: data1.weather[0].description,\r\n          main: data1.weather[0].main,\r\n          temp: data1.main.temp,\r\n          highestTemp: data1.main.temp_max,\r\n          lowestTemp: data1.main.temp_min,\r\n          sunrise,\r\n          sunset,\r\n          clouds: data1.clouds.all,\r\n          humidity: data1.main.humidity,\r\n          wind: data1.wind.speed,\r\n          forecast: data2.list,\r\n        };\r\n        this.setState({\r\n          weatherInfo,\r\n          error: false,\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n\r\n        this.setState({\r\n          error: true,\r\n          weatherInfo: null,\r\n        });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { value, weatherInfo, error } = this.state;\r\n    return (\r\n      <>\r\n        <h1 >Weather app</h1>\r\n        <div>\r\n          \r\n          <SearchCity\r\n            value={value}\r\n            showResult={(weatherInfo || error) && true}\r\n            change={this.handleInputChange}\r\n            submit={this.handleSearchCity}\r\n          />\r\n          {weatherInfo && <Result weather={weatherInfo} />}\r\n          {error && <NotFound error={error} />}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}